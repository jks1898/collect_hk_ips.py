name: Update api.txt

on:
  schedule:
    - cron: '0 * * * *'  # 每小时整点执行

jobs:
  update:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # 获取完整历史，方便 rebase/push

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run IP collection script
        run: python collect_api.py

      - name: Commit and push api.txt if changed
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git checkout main

          # 暂存 api.txt 改动，防止 pull 出错
          git add api.txt
          git stash push -m "temp" || true
          git pull --rebase origin main
          git stash pop || true

          # 如果 api.txt 有变化，则提交
          if ! git diff --quiet api.txt; then
            git add api.txt
            git commit -m "Update CT api.txt"
            # 自动处理可能的 push 冲突
            git push origin main || git push origin HEAD:main --force-with-lease
